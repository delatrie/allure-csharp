<Project>
    <!-- Metadata -->
    <PropertyGroup>
        <Version>2.13-SNAPSHOT</Version>
        <Company>Qameta Software</Company>
        <RepositoryUrl>https://github.com/allure-framework/allure-csharp</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
    </PropertyGroup>

    <!-- Common projects' properties -->
    <PropertyGroup>
        <LangVersion>12</LangVersion>
        <CheckEolTargetFramework>false</CheckEolTargetFramework>
        <IsPackable>false</IsPackable>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <PackageProjectUrl>https://allurereport.org/</PackageProjectUrl>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageTags>allure</PackageTags>
        <PackageReleaseNotes>https://github.com/allure-framework/allure-csharp/releases/tag/2.12.1</PackageReleaseNotes>
    </PropertyGroup>

    <!-- Signing properties (Windows-only) -->
    <PropertyGroup Condition=" '$(OS)' == 'Windows_NT' ">
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)build/identity-key-public.snk</AssemblyOriginatorKeyFile>

        <!-- Allows assemblies to behave like they are strong named even after AspectInjector modifies them.
         This mode has some limitations (see https://github.com/dotnet/runtime/blob/main/docs/project/public-signing.md).
         We're using it as a fallback in case sn.exe is not found on the machine to make it easier for developers to
         work with the project.
         Since we do the publishing on a Windows runner, the assemblies published to NuGet are always
         strong named. -->
        <PublicSign>true</PublicSign>
    </PropertyGroup>

    <!-- Debug properties -->
    <PropertyGroup>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>portable</DebugType>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
    </PropertyGroup>

    <!-- Enable SourceLink for all projects -->
    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
    </ItemGroup>

    <!-- Include LICENSE to all packages -->
    <ItemGroup Condition="'$(IsPackable)' == 'true'">
        <None Include="$(MSBuildThisFileDirectory)LICENSE" Pack="true" PackagePath="\" />
    </ItemGroup>
</Project>